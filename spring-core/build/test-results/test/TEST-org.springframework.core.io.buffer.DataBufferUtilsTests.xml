<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.core.io.buffer.DataBufferUtilsTests" tests="246" skipped="0" failures="0" errors="0" timestamp="2019-09-18T03:48:41" hostname="DESKTOP-2IKHCH4" time="1.692">
  <properties/>
  <testcase name="readAsynchronousFileChannelCancel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readAsynchronousFileChannelCancel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readAsynchronousFileChannelCancel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readAsynchronousFileChannelCancel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readAsynchronousFileChannelCancel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readAsynchronousFileChannelCancel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.022"/>
  <testcase name="readAsynchronousFileChannelError(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.086"/>
  <testcase name="readAsynchronousFileChannelError(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readAsynchronousFileChannelError(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readAsynchronousFileChannelError(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readAsynchronousFileChannelError(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readAsynchronousFileChannelError(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readAndWriteByteChannel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.024"/>
  <testcase name="readAndWriteByteChannel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.008"/>
  <testcase name="readAndWriteByteChannel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.012"/>
  <testcase name="readAndWriteByteChannel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.01"/>
  <testcase name="readAndWriteByteChannel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.011"/>
  <testcase name="readAndWriteByteChannel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.007"/>
  <testcase name="readResource(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.01"/>
  <testcase name="readResource(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.006"/>
  <testcase name="readResource(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.021"/>
  <testcase name="readResource(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.02"/>
  <testcase name="readResource(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.014"/>
  <testcase name="readResource(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannelErrorInWrite(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.012"/>
  <testcase name="writeWritableByteChannelErrorInWrite(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeWritableByteChannelErrorInWrite(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeWritableByteChannelErrorInWrite(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeWritableByteChannelErrorInWrite(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="writeWritableByteChannelErrorInWrite(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="joinCanceled(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="joinCanceled(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="joinCanceled(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="joinCanceled(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="joinCanceled(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="joinCanceled(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="readAsynchronousFileChannel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.006"/>
  <testcase name="readAsynchronousFileChannel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.015"/>
  <testcase name="readAsynchronousFileChannel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readAsynchronousFileChannel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readAsynchronousFileChannel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readAsynchronousFileChannel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="skipUntilByteCountCancelled(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="skipUntilByteCountCancelled(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="skipUntilByteCountCancelled(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="skipUntilByteCountCancelled(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="skipUntilByteCountCancelled(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="skipUntilByteCountCancelled(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="writePath(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.035"/>
  <testcase name="writePath(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.01"/>
  <testcase name="writePath(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.016"/>
  <testcase name="writePath(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writePath(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.006"/>
  <testcase name="writePath(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeAsynchronousFileChannelErrorInWrite(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="writeAsynchronousFileChannelErrorInWrite(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="writeAsynchronousFileChannelErrorInWrite(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="writeAsynchronousFileChannelErrorInWrite(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeAsynchronousFileChannelErrorInWrite(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="writeAsynchronousFileChannelErrorInWrite(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="SPR16070(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.014"/>
  <testcase name="SPR16070(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="SPR16070(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="SPR16070(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="SPR16070(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.015"/>
  <testcase name="SPR16070(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="writeAsynchronousFileChannelErrorInFlux(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.031"/>
  <testcase name="writeAsynchronousFileChannelErrorInFlux(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.009"/>
  <testcase name="writeAsynchronousFileChannelErrorInFlux(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeAsynchronousFileChannelErrorInFlux(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writeAsynchronousFileChannelErrorInFlux(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.008"/>
  <testcase name="writeAsynchronousFileChannelErrorInFlux(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readPath(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readPath(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readPath(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readPath(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readPath(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readPath(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readInputStream(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readInputStream(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readInputStream(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readInputStream(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readInputStream(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readInputStream(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readResourcePosition(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readResourcePosition(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readResourcePosition(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.011"/>
  <testcase name="readResourcePosition(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readResourcePosition(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readResourcePosition(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readAndWriteAsynchronousFileChannel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.01"/>
  <testcase name="readAndWriteAsynchronousFileChannel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.009"/>
  <testcase name="readAndWriteAsynchronousFileChannel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.008"/>
  <testcase name="readAndWriteAsynchronousFileChannel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.008"/>
  <testcase name="readAndWriteAsynchronousFileChannel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.008"/>
  <testcase name="readAndWriteAsynchronousFileChannel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.008"/>
  <testcase name="skipUntilByteCountErrorInFlux(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCountErrorInFlux(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCountErrorInFlux(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCountErrorInFlux(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCountErrorInFlux(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="skipUntilByteCountErrorInFlux(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="writeWritableByteChannel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="skipUntilByteCount(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCount(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCount(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCount(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCount(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="skipUntilByteCount(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readResourcePositionAndTakeUntil(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readResourcePositionAndTakeUntil(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readResourcePositionAndTakeUntil(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readResourcePositionAndTakeUntil(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readResourcePositionAndTakeUntil(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readResourcePositionAndTakeUntil(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="join(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="join(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="join(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="join(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="join(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="join(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountCanceled(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountCanceled(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountCanceled(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountCanceled(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountCanceled(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountCanceled(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="matcher2(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="matcher2(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="matcher2(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="matcher2(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="matcher2(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="matcher2(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="writeAsynchronousFileChannelCanceled(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="writeAsynchronousFileChannelCanceled(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="writeAsynchronousFileChannelCanceled(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeAsynchronousFileChannelCanceled(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.02"/>
  <testcase name="writeAsynchronousFileChannelCanceled(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeAsynchronousFileChannelCanceled(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.02"/>
  <testcase name="readByteChannel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.006"/>
  <testcase name="readByteChannel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readByteChannel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readByteChannel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readByteChannel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeWritableByteChannelCancel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.01"/>
  <testcase name="writeWritableByteChannelCancel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeWritableByteChannelCancel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeWritableByteChannelCancel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannelCancel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeWritableByteChannelCancel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="matcher(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="matcher(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="matcher(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="matcher(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="matcher(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="matcher(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="skipUntilByteCountShouldSkipAll(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="skipUntilByteCountShouldSkipAll(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="skipUntilByteCountShouldSkipAll(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCountShouldSkipAll(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCountShouldSkipAll(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="skipUntilByteCountShouldSkipAll(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="writeOutputStream(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writeOutputStream(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeOutputStream(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeOutputStream(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.006"/>
  <testcase name="writeOutputStream(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writeOutputStream(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.006"/>
  <testcase name="joinErrors(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="joinErrors(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="joinErrors(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="joinErrors(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="joinErrors(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="joinErrors(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="readByteArrayResourcePositionAndTakeUntil(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readByteArrayResourcePositionAndTakeUntil(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readByteArrayResourcePositionAndTakeUntil(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readByteArrayResourcePositionAndTakeUntil(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readByteArrayResourcePositionAndTakeUntil(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readByteArrayResourcePositionAndTakeUntil(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="releaseConsumer(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="releaseConsumer(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="releaseConsumer(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="releaseConsumer(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="releaseConsumer(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="releaseConsumer(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="writeWritableByteChannelErrorInFlux(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannelErrorInFlux(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writeWritableByteChannelErrorInFlux(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeWritableByteChannelErrorInFlux(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.013"/>
  <testcase name="writeWritableByteChannelErrorInFlux(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writeWritableByteChannelErrorInFlux(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readByteChannelCancel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readByteChannelCancel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannelCancel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannelCancel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readByteChannelCancel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readByteChannelCancel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannelError(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readByteChannelError(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannelError(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannelError(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannelError(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readByteChannelError(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="takeUntilByteCountError(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountError(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountError(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountError(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountError(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountError(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="takeUntilByteCountExact(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountExact(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountExact(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountExact(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCountExact(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCountExact(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readAsynchronousFileChannelPosition(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readAsynchronousFileChannelPosition(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readAsynchronousFileChannelPosition(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.003"/>
  <testcase name="readAsynchronousFileChannelPosition(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="readAsynchronousFileChannelPosition(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="readAsynchronousFileChannelPosition(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="writeAsynchronousFileChannel(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeAsynchronousFileChannel(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writeAsynchronousFileChannel(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeAsynchronousFileChannel(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.005"/>
  <testcase name="writeAsynchronousFileChannel(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.004"/>
  <testcase name="writeAsynchronousFileChannel(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.006"/>
  <testcase name="takeUntilByteCount(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCount(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCount(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="takeUntilByteCount(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="takeUntilByteCount(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="takeUntilByteCount(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.0"/>
  <testcase name="readAsynchronousFileChannelCancelWithoutDemand(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readAsynchronousFileChannelCancelWithoutDemand(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readAsynchronousFileChannelCancelWithoutDemand(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readAsynchronousFileChannelCancelWithoutDemand(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <testcase name="readAsynchronousFileChannelCancelWithoutDemand(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.001"/>
  <testcase name="readAsynchronousFileChannelCancelWithoutDemand(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferUtilsTests" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
